/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_STOPWATCH_H
#define _MOCK_STOPWATCH_H

#include "unity.h"
#include "StopWatch.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_StopWatch_Init(void);
void mock_StopWatch_Destroy(void);
void mock_StopWatch_Verify(void);




#define StopWatch_delayMs_Ignore() StopWatch_delayMs_CMockIgnore()
void StopWatch_delayMs_CMockIgnore(void);
#define StopWatch_delayMs_StopIgnore() StopWatch_delayMs_CMockStopIgnore()
void StopWatch_delayMs_CMockStopIgnore(void);
#define StopWatch_delayMs_Expect(delay) StopWatch_delayMs_CMockExpect(__LINE__, delay)
void StopWatch_delayMs_CMockExpect(UNITY_LINE_TYPE cmock_line, uint32_t delay);
typedef void (* CMOCK_StopWatch_delayMs_CALLBACK)(uint32_t delay, int cmock_num_calls);
void StopWatch_delayMs_AddCallback(CMOCK_StopWatch_delayMs_CALLBACK Callback);
void StopWatch_delayMs_Stub(CMOCK_StopWatch_delayMs_CALLBACK Callback);
#define StopWatch_delayMs_StubWithCallback StopWatch_delayMs_Stub
#define StopWatch_delayMs_IgnoreArg_delay() StopWatch_delayMs_CMockIgnoreArg_delay(__LINE__)
void StopWatch_delayMs_CMockIgnoreArg_delay(UNITY_LINE_TYPE cmock_line);
#define StopWatch_oneSecondPassed_IgnoreAndReturn(cmock_retval) StopWatch_oneSecondPassed_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void StopWatch_oneSecondPassed_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, status_t cmock_to_return);
#define StopWatch_oneSecondPassed_StopIgnore() StopWatch_oneSecondPassed_CMockStopIgnore()
void StopWatch_oneSecondPassed_CMockStopIgnore(void);
#define StopWatch_oneSecondPassed_ExpectAndReturn(bOneSecondPassed, cmock_retval) StopWatch_oneSecondPassed_CMockExpectAndReturn(__LINE__, bOneSecondPassed, cmock_retval)
void StopWatch_oneSecondPassed_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, BOOL* bOneSecondPassed, status_t cmock_to_return);
typedef status_t (* CMOCK_StopWatch_oneSecondPassed_CALLBACK)(BOOL* bOneSecondPassed, int cmock_num_calls);
void StopWatch_oneSecondPassed_AddCallback(CMOCK_StopWatch_oneSecondPassed_CALLBACK Callback);
void StopWatch_oneSecondPassed_Stub(CMOCK_StopWatch_oneSecondPassed_CALLBACK Callback);
#define StopWatch_oneSecondPassed_StubWithCallback StopWatch_oneSecondPassed_Stub
#define StopWatch_oneSecondPassed_ReturnThruPtr_bOneSecondPassed(bOneSecondPassed) StopWatch_oneSecondPassed_CMockReturnMemThruPtr_bOneSecondPassed(__LINE__, bOneSecondPassed, sizeof(BOOL))
#define StopWatch_oneSecondPassed_ReturnArrayThruPtr_bOneSecondPassed(bOneSecondPassed, cmock_len) StopWatch_oneSecondPassed_CMockReturnMemThruPtr_bOneSecondPassed(__LINE__, bOneSecondPassed, cmock_len * sizeof(*bOneSecondPassed))
#define StopWatch_oneSecondPassed_ReturnMemThruPtr_bOneSecondPassed(bOneSecondPassed, cmock_size) StopWatch_oneSecondPassed_CMockReturnMemThruPtr_bOneSecondPassed(__LINE__, bOneSecondPassed, cmock_size)
void StopWatch_oneSecondPassed_CMockReturnMemThruPtr_bOneSecondPassed(UNITY_LINE_TYPE cmock_line, BOOL* bOneSecondPassed, size_t cmock_size);
#define StopWatch_oneSecondPassed_IgnoreArg_bOneSecondPassed() StopWatch_oneSecondPassed_CMockIgnoreArg_bOneSecondPassed(__LINE__)
void StopWatch_oneSecondPassed_CMockIgnoreArg_bOneSecondPassed(UNITY_LINE_TYPE cmock_line);
#define StopWatch_ISR_Ignore() StopWatch_ISR_CMockIgnore()
void StopWatch_ISR_CMockIgnore(void);
#define StopWatch_ISR_StopIgnore() StopWatch_ISR_CMockStopIgnore()
void StopWatch_ISR_CMockStopIgnore(void);
#define StopWatch_ISR_Expect() StopWatch_ISR_CMockExpect(__LINE__)
void StopWatch_ISR_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_StopWatch_ISR_CALLBACK)(int cmock_num_calls);
void StopWatch_ISR_AddCallback(CMOCK_StopWatch_ISR_CALLBACK Callback);
void StopWatch_ISR_Stub(CMOCK_StopWatch_ISR_CALLBACK Callback);
#define StopWatch_ISR_StubWithCallback StopWatch_ISR_Stub
#define StopWatch_init_Ignore() StopWatch_init_CMockIgnore()
void StopWatch_init_CMockIgnore(void);
#define StopWatch_init_StopIgnore() StopWatch_init_CMockStopIgnore()
void StopWatch_init_CMockStopIgnore(void);
#define StopWatch_init_Expect() StopWatch_init_CMockExpect(__LINE__)
void StopWatch_init_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_StopWatch_init_CALLBACK)(int cmock_num_calls);
void StopWatch_init_AddCallback(CMOCK_StopWatch_init_CALLBACK Callback);
void StopWatch_init_Stub(CMOCK_StopWatch_init_CALLBACK Callback);
#define StopWatch_init_StubWithCallback StopWatch_init_Stub
#define StopWatch_execute_Ignore() StopWatch_execute_CMockIgnore()
void StopWatch_execute_CMockIgnore(void);
#define StopWatch_execute_StopIgnore() StopWatch_execute_CMockStopIgnore()
void StopWatch_execute_CMockStopIgnore(void);
#define StopWatch_execute_Expect() StopWatch_execute_CMockExpect(__LINE__)
void StopWatch_execute_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_StopWatch_execute_CALLBACK)(int cmock_num_calls);
void StopWatch_execute_AddCallback(CMOCK_StopWatch_execute_CALLBACK Callback);
void StopWatch_execute_Stub(CMOCK_StopWatch_execute_CALLBACK Callback);
#define StopWatch_execute_StubWithCallback StopWatch_execute_Stub

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
