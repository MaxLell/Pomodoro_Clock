/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_REALTIMECLOCK_HARDWARE_H
#define _MOCK_REALTIMECLOCK_HARDWARE_H

#include "unity.h"
#include "RealTimeClock_Hardware.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_RealTimeClock_Hardware_Init(void);
void mock_RealTimeClock_Hardware_Destroy(void);
void mock_RealTimeClock_Hardware_Verify(void);




#define RealTimeClockHW_getTimeAndDate_IgnoreAndReturn(cmock_retval) RealTimeClockHW_getTimeAndDate_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void RealTimeClockHW_getTimeAndDate_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, status_t cmock_to_return);
#define RealTimeClockHW_getTimeAndDate_StopIgnore() RealTimeClockHW_getTimeAndDate_CMockStopIgnore()
void RealTimeClockHW_getTimeAndDate_CMockStopIgnore(void);
#define RealTimeClockHW_getTimeAndDate_ExpectAndReturn(in_pTimeAndDate, cmock_retval) RealTimeClockHW_getTimeAndDate_CMockExpectAndReturn(__LINE__, in_pTimeAndDate, cmock_retval)
void RealTimeClockHW_getTimeAndDate_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, RealTimeClock_TimeAndDate_t* in_pTimeAndDate, status_t cmock_to_return);
typedef status_t (* CMOCK_RealTimeClockHW_getTimeAndDate_CALLBACK)(RealTimeClock_TimeAndDate_t* in_pTimeAndDate, int cmock_num_calls);
void RealTimeClockHW_getTimeAndDate_AddCallback(CMOCK_RealTimeClockHW_getTimeAndDate_CALLBACK Callback);
void RealTimeClockHW_getTimeAndDate_Stub(CMOCK_RealTimeClockHW_getTimeAndDate_CALLBACK Callback);
#define RealTimeClockHW_getTimeAndDate_StubWithCallback RealTimeClockHW_getTimeAndDate_Stub
#define RealTimeClockHW_getTimeAndDate_ReturnThruPtr_in_pTimeAndDate(in_pTimeAndDate) RealTimeClockHW_getTimeAndDate_CMockReturnMemThruPtr_in_pTimeAndDate(__LINE__, in_pTimeAndDate, sizeof(RealTimeClock_TimeAndDate_t))
#define RealTimeClockHW_getTimeAndDate_ReturnArrayThruPtr_in_pTimeAndDate(in_pTimeAndDate, cmock_len) RealTimeClockHW_getTimeAndDate_CMockReturnMemThruPtr_in_pTimeAndDate(__LINE__, in_pTimeAndDate, cmock_len * sizeof(*in_pTimeAndDate))
#define RealTimeClockHW_getTimeAndDate_ReturnMemThruPtr_in_pTimeAndDate(in_pTimeAndDate, cmock_size) RealTimeClockHW_getTimeAndDate_CMockReturnMemThruPtr_in_pTimeAndDate(__LINE__, in_pTimeAndDate, cmock_size)
void RealTimeClockHW_getTimeAndDate_CMockReturnMemThruPtr_in_pTimeAndDate(UNITY_LINE_TYPE cmock_line, RealTimeClock_TimeAndDate_t* in_pTimeAndDate, size_t cmock_size);
#define RealTimeClockHW_getTimeAndDate_IgnoreArg_in_pTimeAndDate() RealTimeClockHW_getTimeAndDate_CMockIgnoreArg_in_pTimeAndDate(__LINE__)
void RealTimeClockHW_getTimeAndDate_CMockIgnoreArg_in_pTimeAndDate(UNITY_LINE_TYPE cmock_line);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
