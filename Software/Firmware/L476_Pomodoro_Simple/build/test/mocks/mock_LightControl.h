/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_LIGHTCONTROL_H
#define _MOCK_LIGHTCONTROL_H

#include "unity.h"
#include "LightControl.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_LightControl_Init(void);
void mock_LightControl_Destroy(void);
void mock_LightControl_Verify(void);




#define LightControl_fillMinuteToColorArray_IgnoreAndReturn(cmock_retval) LightControl_fillMinuteToColorArray_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LightControl_fillMinuteToColorArray_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, status_t cmock_to_return);
#define LightControl_fillMinuteToColorArray_StopIgnore() LightControl_fillMinuteToColorArray_CMockStopIgnore()
void LightControl_fillMinuteToColorArray_CMockStopIgnore(void);
#define LightControl_fillMinuteToColorArray_ExpectAndReturn(in_u8CurrentMinute, in_u8WorktimeIntervalMin, in_u8BreaktimeIntervalMin, inout_au8ColorArray, cmock_retval) LightControl_fillMinuteToColorArray_CMockExpectAndReturn(__LINE__, in_u8CurrentMinute, in_u8WorktimeIntervalMin, in_u8BreaktimeIntervalMin, inout_au8ColorArray, cmock_retval)
void LightControl_fillMinuteToColorArray_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t in_u8CurrentMinute, uint8_t in_u8WorktimeIntervalMin, uint8_t in_u8BreaktimeIntervalMin, uint8_t* inout_au8ColorArray, status_t cmock_to_return);
typedef status_t (* CMOCK_LightControl_fillMinuteToColorArray_CALLBACK)(uint8_t in_u8CurrentMinute, uint8_t in_u8WorktimeIntervalMin, uint8_t in_u8BreaktimeIntervalMin, uint8_t* inout_au8ColorArray, int cmock_num_calls);
void LightControl_fillMinuteToColorArray_AddCallback(CMOCK_LightControl_fillMinuteToColorArray_CALLBACK Callback);
void LightControl_fillMinuteToColorArray_Stub(CMOCK_LightControl_fillMinuteToColorArray_CALLBACK Callback);
#define LightControl_fillMinuteToColorArray_StubWithCallback LightControl_fillMinuteToColorArray_Stub
#define LightControl_fillMinuteToColorArray_ReturnThruPtr_inout_au8ColorArray(inout_au8ColorArray) LightControl_fillMinuteToColorArray_CMockReturnMemThruPtr_inout_au8ColorArray(__LINE__, inout_au8ColorArray, sizeof(uint8_t))
#define LightControl_fillMinuteToColorArray_ReturnArrayThruPtr_inout_au8ColorArray(inout_au8ColorArray, cmock_len) LightControl_fillMinuteToColorArray_CMockReturnMemThruPtr_inout_au8ColorArray(__LINE__, inout_au8ColorArray, cmock_len * sizeof(*inout_au8ColorArray))
#define LightControl_fillMinuteToColorArray_ReturnMemThruPtr_inout_au8ColorArray(inout_au8ColorArray, cmock_size) LightControl_fillMinuteToColorArray_CMockReturnMemThruPtr_inout_au8ColorArray(__LINE__, inout_au8ColorArray, cmock_size)
void LightControl_fillMinuteToColorArray_CMockReturnMemThruPtr_inout_au8ColorArray(UNITY_LINE_TYPE cmock_line, uint8_t* inout_au8ColorArray, size_t cmock_size);
#define LightControl_fillMinuteToColorArray_IgnoreArg_in_u8CurrentMinute() LightControl_fillMinuteToColorArray_CMockIgnoreArg_in_u8CurrentMinute(__LINE__)
void LightControl_fillMinuteToColorArray_CMockIgnoreArg_in_u8CurrentMinute(UNITY_LINE_TYPE cmock_line);
#define LightControl_fillMinuteToColorArray_IgnoreArg_in_u8WorktimeIntervalMin() LightControl_fillMinuteToColorArray_CMockIgnoreArg_in_u8WorktimeIntervalMin(__LINE__)
void LightControl_fillMinuteToColorArray_CMockIgnoreArg_in_u8WorktimeIntervalMin(UNITY_LINE_TYPE cmock_line);
#define LightControl_fillMinuteToColorArray_IgnoreArg_in_u8BreaktimeIntervalMin() LightControl_fillMinuteToColorArray_CMockIgnoreArg_in_u8BreaktimeIntervalMin(__LINE__)
void LightControl_fillMinuteToColorArray_CMockIgnoreArg_in_u8BreaktimeIntervalMin(UNITY_LINE_TYPE cmock_line);
#define LightControl_fillMinuteToColorArray_IgnoreArg_inout_au8ColorArray() LightControl_fillMinuteToColorArray_CMockIgnoreArg_inout_au8ColorArray(__LINE__)
void LightControl_fillMinuteToColorArray_CMockIgnoreArg_inout_au8ColorArray(UNITY_LINE_TYPE cmock_line);
#define LightControl_removeColorsFromMinuteArray_IgnoreAndReturn(cmock_retval) LightControl_removeColorsFromMinuteArray_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LightControl_removeColorsFromMinuteArray_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, status_t cmock_to_return);
#define LightControl_removeColorsFromMinuteArray_StopIgnore() LightControl_removeColorsFromMinuteArray_CMockStopIgnore()
void LightControl_removeColorsFromMinuteArray_CMockStopIgnore(void);
#define LightControl_removeColorsFromMinuteArray_ExpectAndReturn(inout_au8MinuteToColorArray, in_u8CurrentMinute, cmock_retval) LightControl_removeColorsFromMinuteArray_CMockExpectAndReturn(__LINE__, inout_au8MinuteToColorArray, in_u8CurrentMinute, cmock_retval)
void LightControl_removeColorsFromMinuteArray_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t* inout_au8MinuteToColorArray, uint8_t in_u8CurrentMinute, status_t cmock_to_return);
typedef status_t (* CMOCK_LightControl_removeColorsFromMinuteArray_CALLBACK)(uint8_t* inout_au8MinuteToColorArray, uint8_t in_u8CurrentMinute, int cmock_num_calls);
void LightControl_removeColorsFromMinuteArray_AddCallback(CMOCK_LightControl_removeColorsFromMinuteArray_CALLBACK Callback);
void LightControl_removeColorsFromMinuteArray_Stub(CMOCK_LightControl_removeColorsFromMinuteArray_CALLBACK Callback);
#define LightControl_removeColorsFromMinuteArray_StubWithCallback LightControl_removeColorsFromMinuteArray_Stub
#define LightControl_removeColorsFromMinuteArray_ReturnThruPtr_inout_au8MinuteToColorArray(inout_au8MinuteToColorArray) LightControl_removeColorsFromMinuteArray_CMockReturnMemThruPtr_inout_au8MinuteToColorArray(__LINE__, inout_au8MinuteToColorArray, sizeof(uint8_t))
#define LightControl_removeColorsFromMinuteArray_ReturnArrayThruPtr_inout_au8MinuteToColorArray(inout_au8MinuteToColorArray, cmock_len) LightControl_removeColorsFromMinuteArray_CMockReturnMemThruPtr_inout_au8MinuteToColorArray(__LINE__, inout_au8MinuteToColorArray, cmock_len * sizeof(*inout_au8MinuteToColorArray))
#define LightControl_removeColorsFromMinuteArray_ReturnMemThruPtr_inout_au8MinuteToColorArray(inout_au8MinuteToColorArray, cmock_size) LightControl_removeColorsFromMinuteArray_CMockReturnMemThruPtr_inout_au8MinuteToColorArray(__LINE__, inout_au8MinuteToColorArray, cmock_size)
void LightControl_removeColorsFromMinuteArray_CMockReturnMemThruPtr_inout_au8MinuteToColorArray(UNITY_LINE_TYPE cmock_line, uint8_t* inout_au8MinuteToColorArray, size_t cmock_size);
#define LightControl_removeColorsFromMinuteArray_IgnoreArg_inout_au8MinuteToColorArray() LightControl_removeColorsFromMinuteArray_CMockIgnoreArg_inout_au8MinuteToColorArray(__LINE__)
void LightControl_removeColorsFromMinuteArray_CMockIgnoreArg_inout_au8MinuteToColorArray(UNITY_LINE_TYPE cmock_line);
#define LightControl_removeColorsFromMinuteArray_IgnoreArg_in_u8CurrentMinute() LightControl_removeColorsFromMinuteArray_CMockIgnoreArg_in_u8CurrentMinute(__LINE__)
void LightControl_removeColorsFromMinuteArray_CMockIgnoreArg_in_u8CurrentMinute(UNITY_LINE_TYPE cmock_line);
#define LightControl_fillLedToColorArray_IgnoreAndReturn(cmock_retval) LightControl_fillLedToColorArray_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LightControl_fillLedToColorArray_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, status_t cmock_to_return);
#define LightControl_fillLedToColorArray_StopIgnore() LightControl_fillLedToColorArray_CMockStopIgnore()
void LightControl_fillLedToColorArray_CMockStopIgnore(void);
#define LightControl_fillLedToColorArray_ExpectAndReturn(in_au8MinuteToColorArray, inout_au8LedToColorArray, cmock_retval) LightControl_fillLedToColorArray_CMockExpectAndReturn(__LINE__, in_au8MinuteToColorArray, inout_au8LedToColorArray, cmock_retval)
void LightControl_fillLedToColorArray_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t* in_au8MinuteToColorArray, uint8_t* inout_au8LedToColorArray, status_t cmock_to_return);
typedef status_t (* CMOCK_LightControl_fillLedToColorArray_CALLBACK)(uint8_t* in_au8MinuteToColorArray, uint8_t* inout_au8LedToColorArray, int cmock_num_calls);
void LightControl_fillLedToColorArray_AddCallback(CMOCK_LightControl_fillLedToColorArray_CALLBACK Callback);
void LightControl_fillLedToColorArray_Stub(CMOCK_LightControl_fillLedToColorArray_CALLBACK Callback);
#define LightControl_fillLedToColorArray_StubWithCallback LightControl_fillLedToColorArray_Stub
#define LightControl_fillLedToColorArray_ReturnThruPtr_in_au8MinuteToColorArray(in_au8MinuteToColorArray) LightControl_fillLedToColorArray_CMockReturnMemThruPtr_in_au8MinuteToColorArray(__LINE__, in_au8MinuteToColorArray, sizeof(uint8_t))
#define LightControl_fillLedToColorArray_ReturnArrayThruPtr_in_au8MinuteToColorArray(in_au8MinuteToColorArray, cmock_len) LightControl_fillLedToColorArray_CMockReturnMemThruPtr_in_au8MinuteToColorArray(__LINE__, in_au8MinuteToColorArray, cmock_len * sizeof(*in_au8MinuteToColorArray))
#define LightControl_fillLedToColorArray_ReturnMemThruPtr_in_au8MinuteToColorArray(in_au8MinuteToColorArray, cmock_size) LightControl_fillLedToColorArray_CMockReturnMemThruPtr_in_au8MinuteToColorArray(__LINE__, in_au8MinuteToColorArray, cmock_size)
void LightControl_fillLedToColorArray_CMockReturnMemThruPtr_in_au8MinuteToColorArray(UNITY_LINE_TYPE cmock_line, uint8_t* in_au8MinuteToColorArray, size_t cmock_size);
#define LightControl_fillLedToColorArray_ReturnThruPtr_inout_au8LedToColorArray(inout_au8LedToColorArray) LightControl_fillLedToColorArray_CMockReturnMemThruPtr_inout_au8LedToColorArray(__LINE__, inout_au8LedToColorArray, sizeof(uint8_t))
#define LightControl_fillLedToColorArray_ReturnArrayThruPtr_inout_au8LedToColorArray(inout_au8LedToColorArray, cmock_len) LightControl_fillLedToColorArray_CMockReturnMemThruPtr_inout_au8LedToColorArray(__LINE__, inout_au8LedToColorArray, cmock_len * sizeof(*inout_au8LedToColorArray))
#define LightControl_fillLedToColorArray_ReturnMemThruPtr_inout_au8LedToColorArray(inout_au8LedToColorArray, cmock_size) LightControl_fillLedToColorArray_CMockReturnMemThruPtr_inout_au8LedToColorArray(__LINE__, inout_au8LedToColorArray, cmock_size)
void LightControl_fillLedToColorArray_CMockReturnMemThruPtr_inout_au8LedToColorArray(UNITY_LINE_TYPE cmock_line, uint8_t* inout_au8LedToColorArray, size_t cmock_size);
#define LightControl_fillLedToColorArray_IgnoreArg_in_au8MinuteToColorArray() LightControl_fillLedToColorArray_CMockIgnoreArg_in_au8MinuteToColorArray(__LINE__)
void LightControl_fillLedToColorArray_CMockIgnoreArg_in_au8MinuteToColorArray(UNITY_LINE_TYPE cmock_line);
#define LightControl_fillLedToColorArray_IgnoreArg_inout_au8LedToColorArray() LightControl_fillLedToColorArray_CMockIgnoreArg_inout_au8LedToColorArray(__LINE__)
void LightControl_fillLedToColorArray_CMockIgnoreArg_inout_au8LedToColorArray(UNITY_LINE_TYPE cmock_line);
#define LightControl_setLedsToColor_IgnoreAndReturn(cmock_retval) LightControl_setLedsToColor_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LightControl_setLedsToColor_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, status_t cmock_to_return);
#define LightControl_setLedsToColor_StopIgnore() LightControl_setLedsToColor_CMockStopIgnore()
void LightControl_setLedsToColor_CMockStopIgnore(void);
#define LightControl_setLedsToColor_ExpectAndReturn(in_au8LedToColorArray, cmock_retval) LightControl_setLedsToColor_CMockExpectAndReturn(__LINE__, in_au8LedToColorArray, cmock_retval)
void LightControl_setLedsToColor_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t* in_au8LedToColorArray, status_t cmock_to_return);
typedef status_t (* CMOCK_LightControl_setLedsToColor_CALLBACK)(uint8_t* in_au8LedToColorArray, int cmock_num_calls);
void LightControl_setLedsToColor_AddCallback(CMOCK_LightControl_setLedsToColor_CALLBACK Callback);
void LightControl_setLedsToColor_Stub(CMOCK_LightControl_setLedsToColor_CALLBACK Callback);
#define LightControl_setLedsToColor_StubWithCallback LightControl_setLedsToColor_Stub
#define LightControl_setLedsToColor_ReturnThruPtr_in_au8LedToColorArray(in_au8LedToColorArray) LightControl_setLedsToColor_CMockReturnMemThruPtr_in_au8LedToColorArray(__LINE__, in_au8LedToColorArray, sizeof(uint8_t))
#define LightControl_setLedsToColor_ReturnArrayThruPtr_in_au8LedToColorArray(in_au8LedToColorArray, cmock_len) LightControl_setLedsToColor_CMockReturnMemThruPtr_in_au8LedToColorArray(__LINE__, in_au8LedToColorArray, cmock_len * sizeof(*in_au8LedToColorArray))
#define LightControl_setLedsToColor_ReturnMemThruPtr_in_au8LedToColorArray(in_au8LedToColorArray, cmock_size) LightControl_setLedsToColor_CMockReturnMemThruPtr_in_au8LedToColorArray(__LINE__, in_au8LedToColorArray, cmock_size)
void LightControl_setLedsToColor_CMockReturnMemThruPtr_in_au8LedToColorArray(UNITY_LINE_TYPE cmock_line, uint8_t* in_au8LedToColorArray, size_t cmock_size);
#define LightControl_setLedsToColor_IgnoreArg_in_au8LedToColorArray() LightControl_setLedsToColor_CMockIgnoreArg_in_au8LedToColorArray(__LINE__)
void LightControl_setLedsToColor_CMockIgnoreArg_in_au8LedToColorArray(UNITY_LINE_TYPE cmock_line);
#define LightControl_init_IgnoreAndReturn(cmock_retval) LightControl_init_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LightControl_init_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, status_t cmock_to_return);
#define LightControl_init_StopIgnore() LightControl_init_CMockStopIgnore()
void LightControl_init_CMockStopIgnore(void);
#define LightControl_init_ExpectAndReturn(in_u8CurrentMinute, cmock_retval) LightControl_init_CMockExpectAndReturn(__LINE__, in_u8CurrentMinute, cmock_retval)
void LightControl_init_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t in_u8CurrentMinute, status_t cmock_to_return);
typedef status_t (* CMOCK_LightControl_init_CALLBACK)(uint8_t in_u8CurrentMinute, int cmock_num_calls);
void LightControl_init_AddCallback(CMOCK_LightControl_init_CALLBACK Callback);
void LightControl_init_Stub(CMOCK_LightControl_init_CALLBACK Callback);
#define LightControl_init_StubWithCallback LightControl_init_Stub
#define LightControl_init_IgnoreArg_in_u8CurrentMinute() LightControl_init_CMockIgnoreArg_in_u8CurrentMinute(__LINE__)
void LightControl_init_CMockIgnoreArg_in_u8CurrentMinute(UNITY_LINE_TYPE cmock_line);
#define LightControl_endSequence_IgnoreAndReturn(cmock_retval) LightControl_endSequence_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LightControl_endSequence_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, status_t cmock_to_return);
#define LightControl_endSequence_StopIgnore() LightControl_endSequence_CMockStopIgnore()
void LightControl_endSequence_CMockStopIgnore(void);
#define LightControl_endSequence_ExpectAndReturn(cmock_retval) LightControl_endSequence_CMockExpectAndReturn(__LINE__, cmock_retval)
void LightControl_endSequence_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, status_t cmock_to_return);
typedef status_t (* CMOCK_LightControl_endSequence_CALLBACK)(int cmock_num_calls);
void LightControl_endSequence_AddCallback(CMOCK_LightControl_endSequence_CALLBACK Callback);
void LightControl_endSequence_Stub(CMOCK_LightControl_endSequence_CALLBACK Callback);
#define LightControl_endSequence_StubWithCallback LightControl_endSequence_Stub
#define LightControl_runSequence_IgnoreAndReturn(cmock_retval) LightControl_runSequence_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LightControl_runSequence_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, status_t cmock_to_return);
#define LightControl_runSequence_StopIgnore() LightControl_runSequence_CMockStopIgnore()
void LightControl_runSequence_CMockStopIgnore(void);
#define LightControl_runSequence_ExpectAndReturn(in_u8CurrentMinute, cmock_retval) LightControl_runSequence_CMockExpectAndReturn(__LINE__, in_u8CurrentMinute, cmock_retval)
void LightControl_runSequence_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t in_u8CurrentMinute, status_t cmock_to_return);
typedef status_t (* CMOCK_LightControl_runSequence_CALLBACK)(uint8_t in_u8CurrentMinute, int cmock_num_calls);
void LightControl_runSequence_AddCallback(CMOCK_LightControl_runSequence_CALLBACK Callback);
void LightControl_runSequence_Stub(CMOCK_LightControl_runSequence_CALLBACK Callback);
#define LightControl_runSequence_StubWithCallback LightControl_runSequence_Stub
#define LightControl_runSequence_IgnoreArg_in_u8CurrentMinute() LightControl_runSequence_CMockIgnoreArg_in_u8CurrentMinute(__LINE__)
void LightControl_runSequence_CMockIgnoreArg_in_u8CurrentMinute(UNITY_LINE_TYPE cmock_line);
#define LightControl_execute_IgnoreAndReturn(cmock_retval) LightControl_execute_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LightControl_execute_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, status_t cmock_to_return);
#define LightControl_execute_StopIgnore() LightControl_execute_CMockStopIgnore()
void LightControl_execute_CMockStopIgnore(void);
#define LightControl_execute_ExpectAndReturn(in_u8CurrentMinute, cmock_retval) LightControl_execute_CMockExpectAndReturn(__LINE__, in_u8CurrentMinute, cmock_retval)
void LightControl_execute_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t in_u8CurrentMinute, status_t cmock_to_return);
typedef status_t (* CMOCK_LightControl_execute_CALLBACK)(uint8_t in_u8CurrentMinute, int cmock_num_calls);
void LightControl_execute_AddCallback(CMOCK_LightControl_execute_CALLBACK Callback);
void LightControl_execute_Stub(CMOCK_LightControl_execute_CALLBACK Callback);
#define LightControl_execute_StubWithCallback LightControl_execute_Stub
#define LightControl_execute_IgnoreArg_in_u8CurrentMinute() LightControl_execute_CMockIgnoreArg_in_u8CurrentMinute(__LINE__)
void LightControl_execute_CMockIgnoreArg_in_u8CurrentMinute(UNITY_LINE_TYPE cmock_line);
#define LightControl_sequenceIsCompleted_IgnoreAndReturn(cmock_retval) LightControl_sequenceIsCompleted_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LightControl_sequenceIsCompleted_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, status_t cmock_to_return);
#define LightControl_sequenceIsCompleted_StopIgnore() LightControl_sequenceIsCompleted_CMockStopIgnore()
void LightControl_sequenceIsCompleted_CMockStopIgnore(void);
#define LightControl_sequenceIsCompleted_ExpectAndReturn(out_bSequenceIsCompleted, cmock_retval) LightControl_sequenceIsCompleted_CMockExpectAndReturn(__LINE__, out_bSequenceIsCompleted, cmock_retval)
void LightControl_sequenceIsCompleted_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, BOOL* out_bSequenceIsCompleted, status_t cmock_to_return);
typedef status_t (* CMOCK_LightControl_sequenceIsCompleted_CALLBACK)(BOOL* out_bSequenceIsCompleted, int cmock_num_calls);
void LightControl_sequenceIsCompleted_AddCallback(CMOCK_LightControl_sequenceIsCompleted_CALLBACK Callback);
void LightControl_sequenceIsCompleted_Stub(CMOCK_LightControl_sequenceIsCompleted_CALLBACK Callback);
#define LightControl_sequenceIsCompleted_StubWithCallback LightControl_sequenceIsCompleted_Stub
#define LightControl_sequenceIsCompleted_ReturnThruPtr_out_bSequenceIsCompleted(out_bSequenceIsCompleted) LightControl_sequenceIsCompleted_CMockReturnMemThruPtr_out_bSequenceIsCompleted(__LINE__, out_bSequenceIsCompleted, sizeof(BOOL))
#define LightControl_sequenceIsCompleted_ReturnArrayThruPtr_out_bSequenceIsCompleted(out_bSequenceIsCompleted, cmock_len) LightControl_sequenceIsCompleted_CMockReturnMemThruPtr_out_bSequenceIsCompleted(__LINE__, out_bSequenceIsCompleted, cmock_len * sizeof(*out_bSequenceIsCompleted))
#define LightControl_sequenceIsCompleted_ReturnMemThruPtr_out_bSequenceIsCompleted(out_bSequenceIsCompleted, cmock_size) LightControl_sequenceIsCompleted_CMockReturnMemThruPtr_out_bSequenceIsCompleted(__LINE__, out_bSequenceIsCompleted, cmock_size)
void LightControl_sequenceIsCompleted_CMockReturnMemThruPtr_out_bSequenceIsCompleted(UNITY_LINE_TYPE cmock_line, BOOL* out_bSequenceIsCompleted, size_t cmock_size);
#define LightControl_sequenceIsCompleted_IgnoreArg_out_bSequenceIsCompleted() LightControl_sequenceIsCompleted_CMockIgnoreArg_out_bSequenceIsCompleted(__LINE__)
void LightControl_sequenceIsCompleted_CMockIgnoreArg_out_bSequenceIsCompleted(UNITY_LINE_TYPE cmock_line);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
