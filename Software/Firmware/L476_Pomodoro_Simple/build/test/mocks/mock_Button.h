/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_BUTTON_H
#define _MOCK_BUTTON_H

#include "unity.h"
#include "Button.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_Button_Init(void);
void mock_Button_Destroy(void);
void mock_Button_Verify(void);




#define Button_wasPressed_IgnoreAndReturn(cmock_retval) Button_wasPressed_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void Button_wasPressed_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, status_t cmock_to_return);
#define Button_wasPressed_StopIgnore() Button_wasPressed_CMockStopIgnore()
void Button_wasPressed_CMockStopIgnore(void);
#define Button_wasPressed_ExpectAndReturn(pBButtonWasPressed, cmock_retval) Button_wasPressed_CMockExpectAndReturn(__LINE__, pBButtonWasPressed, cmock_retval)
void Button_wasPressed_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, BOOL* pBButtonWasPressed, status_t cmock_to_return);
typedef status_t (* CMOCK_Button_wasPressed_CALLBACK)(BOOL* pBButtonWasPressed, int cmock_num_calls);
void Button_wasPressed_AddCallback(CMOCK_Button_wasPressed_CALLBACK Callback);
void Button_wasPressed_Stub(CMOCK_Button_wasPressed_CALLBACK Callback);
#define Button_wasPressed_StubWithCallback Button_wasPressed_Stub
#define Button_wasPressed_ReturnThruPtr_pBButtonWasPressed(pBButtonWasPressed) Button_wasPressed_CMockReturnMemThruPtr_pBButtonWasPressed(__LINE__, pBButtonWasPressed, sizeof(BOOL))
#define Button_wasPressed_ReturnArrayThruPtr_pBButtonWasPressed(pBButtonWasPressed, cmock_len) Button_wasPressed_CMockReturnMemThruPtr_pBButtonWasPressed(__LINE__, pBButtonWasPressed, cmock_len * sizeof(*pBButtonWasPressed))
#define Button_wasPressed_ReturnMemThruPtr_pBButtonWasPressed(pBButtonWasPressed, cmock_size) Button_wasPressed_CMockReturnMemThruPtr_pBButtonWasPressed(__LINE__, pBButtonWasPressed, cmock_size)
void Button_wasPressed_CMockReturnMemThruPtr_pBButtonWasPressed(UNITY_LINE_TYPE cmock_line, BOOL* pBButtonWasPressed, size_t cmock_size);
#define Button_wasPressed_IgnoreArg_pBButtonWasPressed() Button_wasPressed_CMockIgnoreArg_pBButtonWasPressed(__LINE__)
void Button_wasPressed_CMockIgnoreArg_pBButtonWasPressed(UNITY_LINE_TYPE cmock_line);
#define Button_ISR_Ignore() Button_ISR_CMockIgnore()
void Button_ISR_CMockIgnore(void);
#define Button_ISR_StopIgnore() Button_ISR_CMockStopIgnore()
void Button_ISR_CMockStopIgnore(void);
#define Button_ISR_Expect() Button_ISR_CMockExpect(__LINE__)
void Button_ISR_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_Button_ISR_CALLBACK)(int cmock_num_calls);
void Button_ISR_AddCallback(CMOCK_Button_ISR_CALLBACK Callback);
void Button_ISR_Stub(CMOCK_Button_ISR_CALLBACK Callback);
#define Button_ISR_StubWithCallback Button_ISR_Stub
#define Button_execute_Ignore() Button_execute_CMockIgnore()
void Button_execute_CMockIgnore(void);
#define Button_execute_StopIgnore() Button_execute_CMockStopIgnore()
void Button_execute_CMockStopIgnore(void);
#define Button_execute_Expect() Button_execute_CMockExpect(__LINE__)
void Button_execute_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_Button_execute_CALLBACK)(int cmock_num_calls);
void Button_execute_AddCallback(CMOCK_Button_execute_CALLBACK Callback);
void Button_execute_Stub(CMOCK_Button_execute_CALLBACK Callback);
#define Button_execute_StubWithCallback Button_execute_Stub

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
