/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_BUZZER_H
#define _MOCK_BUZZER_H

#include "unity.h"
#include "Buzzer.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_Buzzer_Init(void);
void mock_Buzzer_Destroy(void);
void mock_Buzzer_Verify(void);




#define Buzzer_Init_Ignore() Buzzer_Init_CMockIgnore()
void Buzzer_Init_CMockIgnore(void);
#define Buzzer_Init_StopIgnore() Buzzer_Init_CMockStopIgnore()
void Buzzer_Init_CMockStopIgnore(void);
#define Buzzer_Init_Expect() Buzzer_Init_CMockExpect(__LINE__)
void Buzzer_Init_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_Buzzer_Init_CALLBACK)(int cmock_num_calls);
void Buzzer_Init_AddCallback(CMOCK_Buzzer_Init_CALLBACK Callback);
void Buzzer_Init_Stub(CMOCK_Buzzer_Init_CALLBACK Callback);
#define Buzzer_Init_StubWithCallback Buzzer_Init_Stub
#define Buzzer_execute_Ignore() Buzzer_execute_CMockIgnore()
void Buzzer_execute_CMockIgnore(void);
#define Buzzer_execute_StopIgnore() Buzzer_execute_CMockStopIgnore()
void Buzzer_execute_CMockStopIgnore(void);
#define Buzzer_execute_Expect() Buzzer_execute_CMockExpect(__LINE__)
void Buzzer_execute_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_Buzzer_execute_CALLBACK)(int cmock_num_calls);
void Buzzer_execute_AddCallback(CMOCK_Buzzer_execute_CALLBACK Callback);
void Buzzer_execute_Stub(CMOCK_Buzzer_execute_CALLBACK Callback);
#define Buzzer_execute_StubWithCallback Buzzer_execute_Stub

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
